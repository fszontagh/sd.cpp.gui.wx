FROM ubuntu:24.04


# Build arguments possible values: avx,avx2,avx512,cuda,vulkan,all, all-gpu, all-cpu
ARG BACKEND=avx
ARG DOWNLOAD_DEFAULT_MODELS=1

RUN apt-get update && apt-get install -y --no-install-recommends \
    libmagic1 \
    libstdc++6 \
    openssl \
    bash \
    libgomp1

COPY *.so /usr/lib/

RUN mkdir /app
RUN mkdir /app/models
RUN mkdir /app/models/checkpoints
RUN mkdir /app/models/loras
RUN mkdir /app/models/vae
RUN mkdir /app/models/embeddings
RUN mkdir /app/models/taesd
RUN mkdir /app/models/controlnet
RUN mkdir /app/models/esrgan

RUN if [ "$BACKEND" = "cuda" || "$BACKEND" = "all" || "$BACKEND" = "all-gpu" ]; then \
        echo "CUDA support enabled"; \
        apt update; apt install -y --no-install-recommends libcudart12 libcublas12 libnvidia-compute-565-server; \
    fi


RUN if [ "$BACKEND" = "vulkan" || "$BACKEND" = "all" || "$BACKEND" = "all-gpu" ]; then \
        echo "Vulkan support enabled"; \
        apt install -y --no-install-recommends libvulkan1; \
    fi

# AVX/AVX2/AVX512
RUN if [ "$BACKEND" = "avx" || "$BACKEND" = "all" || "$BACKEND" = "all-cpu" ]; then \
        echo "AVX support enabled"; \
    fi

RUN if [ "$BACKEND" = "avx2" || "$BACKEND" = "all" || "$BACKEND" = "all-cpu" ]; then \
        echo "AVX2 support enabled"; \
    fi

RUN if [ "$BACKEND" = "avx512" || "$BACKEND" = "all" || "$BACKEND" = "all-cpu" ]; then \
        echo "AVX512 support enabled"; \
    fi


COPY server/@SERVER_BINARY_NAME@ /app/@SERVER_BINARY_NAME@
COPY server-config-example.json /app/config.json
COPY extprocess/@PROJECT_BINARY_NAME@_diffuser /app/@PROJECT_BINARY_NAME@_diffuser
COPY server/download_base_models.sh /app/download_base_models.sh




RUN apt-get clean && rm -rf /var/lib/apt/lists/*

RUN sed -i "s/\"backend\": \".*\"/\"backend\": \"$BACKEND\"/" /app/config.json

RUN chmod +x /app/@SERVER_BINARY_NAME@
RUN chmod +x /app/download_base_models.sh

RUN if [ "$DOWNLOAD_DEFAULT_MODELS" = "1" ]; then \
        /app/download_base_models.sh /app/config.json; \
    fi

WORKDIR /app

CMD ["/app/@SERVER_BINARY_NAME@", "/app/config.json"]


#docker build --build-arg BACKEND=cuda -t myimage-cuda .
#docker build --build-arg BACKEND=vulkan -t myimage-vulkan .
#docker build --build-arg BACKEND=avx -t myimage-avx .
#docker build --build-arg BACKEND=avx2 -t myimage-avx2 .
#docker build --build-arg BACKEND=avx512 -t myimage-avx512 .